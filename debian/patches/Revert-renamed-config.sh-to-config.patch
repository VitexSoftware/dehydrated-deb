From: Mattia Rizzolo <mattia@debian.org>
Date: Wed, 30 Nov 2016 19:41:50 +0100
Subject: Revert "renamed "config.sh" to "config""

Let's not add another breaking change at this point, keep it for the upload
renaming to dehydrated.

This reverts commit d5b285868e35992027599d25411d80dfd0bf1048.
---
 .gitignore                                         |  2 +-
 CHANGELOG                                          |  1 -
 README.md                                          |  2 +-
 docs/dns-verification.md                           |  2 +-
 docs/examples/{config => config.sh.example}        |  8 ++++----
 docs/examples/{domains.txt => domains.txt.example} |  0
 docs/examples/{hook.sh => hook.sh.example}         |  0
 docs/hook_chain.md                                 |  4 ++--
 docs/staging.md                                    |  2 +-
 dehydrated                                     |  6 +++---
 test.sh                                            | 18 +++++++++---------
 11 files changed, 22 insertions(+), 23 deletions(-)
 rename docs/examples/{config => config.sh.example} (93%)
 rename docs/examples/{domains.txt => domains.txt.example} (100%)
 rename docs/examples/{hook.sh => hook.sh.example} (100%)

diff --git a/.gitignore b/.gitignore
index 05ef181..f5413c9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,7 +1,7 @@
 private_key.pem
 private_key.json
 domains.txt
-config
+config.sh
 hook.sh
 certs/*
 archive/*
diff --git a/CHANGELOG b/CHANGELOG
index 46a6d61..d223f05 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -7,7 +7,6 @@ This file contains a log of major changes in dehydrated
 
 ## [0.3.0] - 2016-09-07
 ## Changed
-- Config is now named `config` instead of `config.sh`!
 - Location of domains.txt is now configurable via DOMAINS_TXT config variable
 - Location of certs directory is now configurable via CERTDIR config variable
 - signcsr command now also outputs chain certificate if --full-chain/-fc is set
diff --git a/README.md b/README.md
index 81bbd10..0c1c3d1 100644
--- a/README.md
+++ b/README.md
@@ -50,7 +50,7 @@ Parameters:
  --no-lock (-n)                   Don't use lockfile (potentially dangerous!)
  --ocsp                           Sets option in CSR indicating OCSP stapling to be mandatory
  --privkey (-p) path/to/key.pem   Use specified private key instead of account key (useful for revocation)
- --config (-f) path/to/config     Use specified config file
+ --config (-f) path/to/config.sh  Use specified config file
  --hook (-k) path/to/hook.sh      Use specified script for hooks
  --out (-o) certs/directory       Output certificates into the specified directory
  --challenge (-t) http-01|dns-01  Which challenge should be used? Currently http-01 and dns-01 are supported
diff --git a/docs/dns-verification.md b/docs/dns-verification.md
index 0c07c3f..071f0e4 100644
--- a/docs/dns-verification.md
+++ b/docs/dns-verification.md
@@ -4,7 +4,7 @@ This script also supports the new `dns-01`-type verification. This type of verif
 
 You need a hook script that deploys the challenge to your DNS server!
 
-The hook script (indicated in the config file or the --hook/-k command line argument) gets four arguments: an operation name (clean_challenge, deploy_challenge, or deploy_cert) and some operands for that. For deploy_challenge $2 is the domain name for which the certificate is required, $3 is a "challenge token" (which is not needed for dns-01), and $4 is a token which needs to be inserted in a TXT record for the domain.
+The hook script (indicated in the config.sh file or the --hook/-k command line argument) gets four arguments: an operation name (clean_challenge, deploy_challenge, or deploy_cert) and some operands for that. For deploy_challenge $2 is the domain name for which the certificate is required, $3 is a "challenge token" (which is not needed for dns-01), and $4 is a token which needs to be inserted in a TXT record for the domain.
 
 Typically, you will need to split the subdomain name in two, the subdomain name and the domain name separately. For example, for "my.example.com", you'll need "my" and "example.com" separately. You then have to prefix "_acme-challenge." before the subdomain name, as in "_acme-challenge.my" and set a TXT record for that on the domain (e.g. "example.com") which has the value supplied in $4
 
diff --git a/docs/examples/config b/docs/examples/config.sh.example
similarity index 93%
rename from docs/examples/config
rename to docs/examples/config.sh.example
index a836a4e..cf13709 100644
--- a/docs/examples/config
+++ b/docs/examples/config.sh.example
@@ -2,10 +2,10 @@
 # This is the main config file for dehydrated      #
 #                                                      #
 # This file is looked for in the following locations:  #
-# $SCRIPTDIR/config (next to this script)              #
-# /usr/local/etc/dehydrated/config                 #
-# /etc/dehydrated/config                           #
-# ${PWD}/config (in current working-directory)         #
+# $SCRIPTDIR/config.sh (next to this script)           #
+# /usr/local/etc/dehydrated/config.sh              #
+# /etc/dehydrated/config.sh                        #
+# ${PWD}/config.sh (in current working-directory)      #
 #                                                      #
 # Default values of this config are in comments        #
 ########################################################
diff --git a/docs/examples/domains.txt b/docs/examples/domains.txt.example
similarity index 100%
rename from docs/examples/domains.txt
rename to docs/examples/domains.txt.example
diff --git a/docs/examples/hook.sh b/docs/examples/hook.sh.example
similarity index 100%
rename from docs/examples/hook.sh
rename to docs/examples/hook.sh.example
diff --git a/docs/hook_chain.md b/docs/hook_chain.md
index 450c0fd..9b44290 100644
--- a/docs/hook_chain.md
+++ b/docs/hook_chain.md
@@ -9,7 +9,7 @@ See below for an example on how the calls change:
 
 ### HOOK_CHAIN="no" (default behaviour)
 ```
-# INFO: Using main config file /etc/dehydrated/config
+# INFO: Using main config file /etc/dehydrated/config.sh
 Processing lukas.im with alternative names: www.lukas.im
  + Checking domain name(s) of existing cert... unchanged.
  + Checking expire date of existing cert...
@@ -37,7 +37,7 @@ HOOK: deploy_cert lukas.im /etc/dehydrated/certs/lukas.im/privkey.pem /etc/l
 
 ### HOOK_CHAIN="yes"
 ```
-# INFO: Using main config file /etc/dehydrated/config
+# INFO: Using main config file /etc/dehydrated/config.sh
 Processing lukas.im with alternative names: www.lukas.im
  + Checking domain name(s) of existing cert... unchanged.
  + Checking expire date of existing cert...
diff --git a/docs/staging.md b/docs/staging.md
index 297db58..7640b14 100644
--- a/docs/staging.md
+++ b/docs/staging.md
@@ -5,7 +5,7 @@ Let’s Encrypt has stringent rate limits in place.
 If you start testing using the production endpoint (which is the default),
 you will quickly hit these limits and find yourself locked out.
 
-To avoid this, please set the CA property to the Let’s Encrypt staging server URL in your config file:
+To avoid this, please set the CA property to the Let’s Encrypt staging server URL in your `config.sh` file:
 
 ```bash
 CA="https://acme-staging.api.letsencrypt.org/directory"
diff --git a/dehydrated b/dehydrated
index 787c31f..a46267c 100755
--- a/dehydrated
+++ b/dehydrated
@@ -95,9 +95,9 @@ load_config() {
   # Check for config in various locations
   if [[ -z "${CONFIG:-}" ]]; then
     for check_config in "/etc/dehydrated" "/usr/local/etc/dehydrated" "${PWD}" "${SCRIPTDIR}"; do
-      if [[ -f "${check_config}/config" ]]; then
+      if [[ -f "${check_config}/config.sh" ]]; then
         BASEDIR="${check_config}"
-        CONFIG="${check_config}/config"
+        CONFIG="${check_config}/config.sh"
         break
       fi
     done
@@ -1045,7 +1045,7 @@ main() {
         PARAM_ACCOUNT_KEY="${1}"
         ;;
 
-      # PARAM_Usage: --config (-f) path/to/config
+      # PARAM_Usage: --config (-f) path/to/config.sh
       # PARAM_Description: Use specified config file
       --config|-f)
         shift 1
diff --git a/test.sh b/test.sh
index 0d81d69..c616232 100755
--- a/test.sh
+++ b/test.sh
@@ -96,10 +96,10 @@ mkdir -p .acme-challenges/.well-known/acme-challenge
 ) &
 
 # Generate config and create empty domains.txt
-echo 'CA="https://testca.kurz.pw/directory"' > config
-echo 'LICENSE="https://testca.kurz.pw/terms/v1"' >> config
-echo 'WELLKNOWN=".acme-challenges/.well-known/acme-challenge"' >> config
-echo 'RENEW_DAYS="14"' >> config
+echo 'CA="https://testca.kurz.pw/directory"' > config.sh
+echo 'LICENSE="https://testca.kurz.pw/terms/v1"' >> config.sh
+echo 'WELLKNOWN=".acme-challenges/.well-known/acme-challenge"' >> config.sh
+echo 'RENEW_DAYS="14"' >> config.sh
 touch domains.txt
 
 # Check if help command is working
@@ -119,8 +119,8 @@ _CHECK_ERRORLOG
 
 # Temporarily move config out of the way and try signing certificate by using temporary config location
 _TEST "Try signing using temporary config location and with domain as command line parameter"
-mv config tmp_config
-./dehydrated --cron --domain "${TMP_URL}" --domain "${TMP2_URL}" -f tmp_config > tmplog 2> errorlog || _FAIL "Script execution failed"
+mv config.sh tmp_config.sh
+./dehydrated --cron --domain "${TMP_URL}" --domain "${TMP2_URL}" -f tmp_config.sh > tmplog 2> errorlog || _FAIL "Script execution failed"
 _CHECK_NOT_LOG "Checking domain name(s) of existing cert"
 _CHECK_LOG "Generating private key"
 _CHECK_LOG "Requesting challenge for ${TMP_URL}"
@@ -129,7 +129,7 @@ _CHECK_LOG "Challenge is valid!"
 _CHECK_LOG "Creating fullchain.pem"
 _CHECK_LOG "Done!"
 _CHECK_ERRORLOG
-mv tmp_config config
+mv tmp_config.sh config.sh
 
 # Add third domain to command-lime, should force renewal.
 _TEST "Run in cron mode again, this time adding third domain, should force renewal."
@@ -157,7 +157,7 @@ _CHECK_LOG "Skipping renew"
 _CHECK_ERRORLOG
 
 # Disable private key renew
-echo 'PRIVATE_KEY_RENEW="no"' >> config
+echo 'PRIVATE_KEY_RENEW="no"' >> config.sh
 
 # Run in cron mode one last time, with domain in domains.txt and force-resign (should find certificate, resign anyway, and not generate private key)
 _TEST "Run in cron mode one last time, with domain in domains.txt and force-resign"
@@ -182,7 +182,7 @@ _CHECK_NOT_LOG "ERROR"
 
 # Check if renewal works
 _TEST "Run in cron mode again, to check if renewal works"
-echo 'RENEW_DAYS="300"' >> config
+echo 'RENEW_DAYS="300"' >> config.sh
 ./dehydrated --cron > tmplog 2> errorlog || _FAIL "Script execution failed"
 _CHECK_LOG "Checking domain name(s) of existing cert... unchanged."
 _CHECK_LOG "Renewing!"
